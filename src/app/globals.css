@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --click-x: 50%;
  --click-y: 50%;
  --blob-color: #ff00ff;
  --mouse-x: 50%;
  --mouse-y: 50%;
  --nudge-x: 0px;
  --nudge-y: 0px;
  --velocity-x: 0;
  --velocity-y: 0;
  --squish-x: 100%;
  --squish-y: 100%;
  --touch-glow: 0;
  --rotation: 0deg;
  --bend-amount: 0;
  --bend-angle: 0deg;
  --click-scale: 1;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

@keyframes gentle-morph {
  0% {
    border-radius: 60% 40% 30% 70%/60% 30% 70% 40%;
  }
  50% {
    border-radius: 40% 60% 70% 30%/50% 60% 30% 70%;
  }
  100% {
    border-radius: 60% 40% 30% 70%/60% 30% 70% 40%;
  }
}

.background {
  position: fixed;
  inset: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    45deg, 
    #000000,
    #020103,
    #030108,
    #020103,
    #000000
  );
  background-size: 400% 400%;
  animation: gradient 15s ease infinite;
  filter: invert(0.5);
  mix-blend-mode: hard-light;
  opacity: 0.97;
}

.blob-container {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  perspective: 1000px;
}

@keyframes lava-morph {
  0% {
    border-radius: 60% 40% 30% 70%/60% 30% 70% 40%;
    transform: translateY(0) scaleY(1);
  }
  25% {
    border-radius: 40% 60% 70% 30%/40% 70% 30% 60%;
    transform: translateY(-10px) scaleY(1.05);
  }
  50% {
    border-radius: 30% 60% 70% 40%/50% 60% 40% 50%;
    transform: translateY(0) scaleY(0.95);
  }
  75% {
    border-radius: 60% 40% 30% 60%/60% 40% 60% 40%;
    transform: translateY(10px) scaleY(1.05);
  }
  100% {
    border-radius: 60% 40% 30% 70%/60% 30% 70% 40%;
    transform: translateY(0) scaleY(1);
  }
}

@keyframes swell {
  0% {
    transform: scale(1);
    filter: brightness(1);
  }
  50% {
    transform: scale(1.1);
    filter: brightness(1.3);
  }
  100% {
    transform: scale(1);
    filter: brightness(1);
  }
}

.blob {
  position: relative;
  width: 300px;
  height: 300px;
  border-radius: 60% 40% 30% 70%/60% 30% 70% 40%;
  background: var(--blob-color);
  transition: background 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  cursor: pointer;
  transform-style: preserve-3d;
  box-shadow: 
    inset -20px -20px 60px rgba(0,0,0,0.5),
    inset 20px 20px 60px rgba(255,255,255,0.5),
    0 0 70px rgba(255,0,255, calc(0.4 + var(--touch-glow))),
    0 0 100px rgba(255,0,255, calc(0.3 + var(--touch-glow)));
  filter: url('#goo') saturate(1.2);
  will-change: transform, border-radius;
}

.blob::before,
.blob::after {
  content: '';
  position: absolute;
  inset: -10px;
  border-radius: inherit;
  background: inherit;
  filter: blur(10px) saturate(1.5);
  opacity: 0.8;
  z-index: -1;
  transform: translateZ(-10px);
  animation: lava-morph 8s ease-in-out infinite reverse;
}

.blob::after {
  filter: blur(20px) saturate(2);
  opacity: 0.5;
  transform: translateZ(-20px) scale(1.1);
  animation-duration: 12s;
}

.blob.clicking {
  animation: none;
  animation: swell 0.4s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.blob.clicking::before,
.blob.clicking::after {
  animation: none;
  transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
  transform: scale(1.1) translateZ(-10px);
  filter: blur(15px) brightness(1.2);
}

.blob.clicking::after {
  transform: scale(1.15) translateZ(-20px);
  filter: blur(25px) brightness(1.2);
}

.blob:hover {
  --touch-glow: 0.3;
}

.glow {
  position: fixed;
  inset: 0;
  background: var(--blob-color);
  opacity: 0;
  animation: glow 1s ease-out forwards;
  pointer-events: none;
  mix-blend-mode: screen;
  filter: saturate(1.5);
}

@keyframes glow {
  0% {
    opacity: 0.4;
    filter: blur(30px) saturate(2);
  }
  100% {
    opacity: 0;
    filter: blur(10px) saturate(1.5);
  }
}

body {
  min-height: 100vh;
  min-height: 100dvh;
  overflow: hidden;
  background: #000;
}

.svg-filters {
  position: absolute;
  visibility: hidden;
  width: 1px;
  height: 1px;
}

@keyframes click-squish {
  0% {
    transform: scale(1);
    filter: brightness(1);
  }
  35% {
    transform: scale(1.1);
    filter: brightness(1.3);
  }
  65% {
    transform: scale(1.05);
    filter: brightness(1.2);
  }
  100% {
    transform: scale(1);
    filter: brightness(1);
  }
}

.blob.clicking {
  animation: 
    lava-morph 8s ease-in-out infinite,
    click-pulse 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes click-pulse {
  0% {
    filter: url('#goo') brightness(1) saturate(1.5);
  }
  50% {
    filter: url('#goo') brightness(1.5) saturate(2);
  }
  100% {
    filter: url('#goo') brightness(1) saturate(1.5);
  }
}

.blob.clicking::before,
.blob.clicking::after {
  animation: click-ripple 0.8s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

@keyframes click-ripple {
  0% {
    transform: scale(1);
    opacity: 0.7;
  }
  50% {
    transform: scale(1.2);
    opacity: 0.3;
  }
  100% {
    transform: scale(1.4);
    opacity: 0;
  }
}

/* Combo animations */
.blob.combo-1 {
  animation: combo-pulse 0.6s infinite;
}

.blob.combo-2 {
  animation: combo-pulse 0.5s infinite;
}

.blob.combo-3 {
  animation: combo-pulse 0.4s infinite;
}

@keyframes combo-pulse {
  0%, 100% {
    transform: scale(1);
    filter: url('#goo') brightness(1);
  }
  50% {
    transform: scale(1.05);
    filter: url('#goo') brightness(1.2);
  }
}

/* Critical hit animation */
.blob.critical-hit {
  animation: critical-flash 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes critical-flash {
  0% {
    filter: url('#goo') brightness(1) saturate(1.2);
  }
  50% {
    filter: url('#goo') brightness(2) saturate(2);
  }
  100% {
    filter: url('#goo') brightness(1) saturate(1.2);
  }
}

@keyframes float-up {
  0% {
    transform: translate(-50%, 0) scale(1);
    opacity: 0;
  }
  20% {
    transform: translate(-50%, -20px) scale(1.5);
    opacity: 0.8;
  }
  100% {
    transform: translate(-50%, -40px) scale(1);
    opacity: 0;
  }
}

.floating-number {
  position: absolute;
  left: var(--x);
  top: var(--y);
  transform-origin: center;
  pointer-events: none;
  font-weight: bold;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
  will-change: transform, opacity;
  font-size: 1.2rem;
  animation: float-up 0.6s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  z-index: 100;
  color: rgba(255, 255, 255, 0.9);
}

.floating-number.critical {
  color: #FFD700;
  font-size: 1.5rem;
}

.floating-number.combo {
  color: #00ffff;
  font-size: 1.3rem;
}

.floating-number.mega {
  color: #ff00ff;
  font-size: 1.6rem;
}

button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

button {
  transition: all 0.2s ease;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
  font-size: 0.9rem;
}

button:not(:disabled):hover {
  transform: translateY(-1px);
  filter: brightness(1.1);
}

button:not(:disabled):active {
  transform: translateY(1px);
}

/* Simplified Menu Styles */
.game-ui {
  position: fixed;
  top: 1rem;
  right: 1rem;
  width: auto;
  max-width: 300px;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(10px);
  border-radius: 1rem;
  padding: 1rem;
  z-index: 1000;
}

.upgrade-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 0.5rem;
}

.upgrade-card {
  background: rgba(0, 0, 0, 0.5);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 0.5rem;
  padding: 0.5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 0.5rem;
  transition: all 0.2s ease;
}

.upgrade-card:hover:not(:disabled) {
  background: rgba(0, 0, 0, 0.7);
  border-color: rgba(255, 255, 255, 0.2);
}

.upgrade-info {
  flex: 1;
}

.upgrade-title {
  font-size: 0.9rem;
  font-weight: bold;
  margin-bottom: 0.2rem;
}

.upgrade-description {
  font-size: 0.7rem;
  opacity: 0.8;
}

.upgrade-stats {
  display: flex;
  flex-direction: column;
  align-items: flex-end;
  font-size: 0.8rem;
}

.upgrade-level {
  color: #4ade80;
  font-size: 0.7rem;
}

.upgrade-cost {
  color: #fcd34d;
  font-size: 0.8rem;
  font-weight: bold;
}

.insufficient-funds {
  color: #f87171;
}

/* Ensure the blob container is visible */
main {
  position: relative;
  z-index: 1;
}
